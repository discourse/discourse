# encoding: utf-8
module Holidays
  # This file is generated by the Ruby Holidays gem.
  #
  # Definitions loaded: definitions/zw.yaml
  #
  # All the definitions are available at https://github.com/holidays/holidays
  module ZW # :nodoc:
    def self.defined_regions
      [:zw]
    end

    def self.holidays_by_month
      {
                0 => [{:function => "easter(year)", :function_arguments => [:year], :function_modifier => -2, :name => "Good Friday", :regions => [:zw]},
            {:function => "easter(year)", :function_arguments => [:year], :function_modifier => 1, :name => "Easter Monday", :regions => [:zw]}],
      1 => [{:mday => 1, :observed => "to_monday_if_sunday(date)", :observed_arguments => [:date], :name => "New Year's Day", :regions => [:zw]}],
      2 => [{:mday => 21, :observed => "to_monday_if_sunday(date)", :observed_arguments => [:date], :name => "Robert Gabriel Mugabe National Youth Day", :regions => [:zw]}],
      4 => [{:mday => 18, :observed => "to_monday_if_sunday(date)", :observed_arguments => [:date], :name => "Independence Day", :regions => [:zw]}],
      5 => [{:mday => 1, :observed => "to_monday_if_sunday(date)", :observed_arguments => [:date], :name => "Workers' Day", :regions => [:zw]},
            {:mday => 25, :observed => "to_monday_if_sunday(date)", :observed_arguments => [:date], :name => "Africa Day", :regions => [:zw]}],
      8 => [{:wday => 1, :week => 2, :name => "Heroes' Day", :regions => [:zw]},
            {:wday => 2, :week => 2, :name => "Defence Forces Day", :regions => [:zw]}],
      12 => [{:mday => 22, :observed => "to_monday_if_sunday(date)", :observed_arguments => [:date], :name => "Unity Day", :regions => [:zw]},
            {:mday => 25, :observed => "to_monday_if_sunday(date)", :observed_arguments => [:date], :name => "Christmas Day", :regions => [:zw]},
            {:mday => 26, :observed => "to_weekday_if_boxing_weekend(date)", :observed_arguments => [:date], :name => "Boxing Day", :regions => [:zw]}]
      }
    end

    def self.custom_methods
      {
          
      }
    end
  end
end
