# encoding: utf-8
require File.expand_path(File.dirname(__FILE__)) + '/../test_helper'

# This file is generated by the Ruby Holiday gem.
#
# Definitions loaded: definitions/us.yaml, definitions/northamericainformal.yaml
class UsDefinitionTests < Test::Unit::TestCase  # :nodoc:

  def test_us
    assert_equal "Mardi Gras Day", (Holidays.on(Date.civil(2025, 3, 4), [:us_la])[0] || {})[:name]
assert_equal "Mardi Gras Day", (Holidays.on(Date.civil(2026, 2, 17), [:us_la])[0] || {})[:name]
assert_equal "Mardi Gras Day", (Holidays.on(Date.civil(2027, 2, 9), [:us_la])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 3, 4), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 2, 17), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 2, 9), [:us])[0] || {})[:name]

    assert_equal "Good Friday", (Holidays.on(Date.civil(2025, 4, 18), [:us_ct, :us_de, :us_ga, :us_hi, :us_in, :us_ky, :us_la, :us_nj, :us_nc, :us_nd, :us_pr, :us_tn])[0] || {})[:name]
assert_equal "Good Friday", (Holidays.on(Date.civil(2026, 4, 3), [:us_ct, :us_de, :us_ga, :us_hi, :us_in, :us_ky, :us_la, :us_nj, :us_nc, :us_nd, :us_pr, :us_tn])[0] || {})[:name]
assert_equal "Good Friday", (Holidays.on(Date.civil(2027, 3, 26), [:us_ct, :us_de, :us_ga, :us_hi, :us_in, :us_ky, :us_la, :us_nj, :us_nc, :us_nd, :us_pr, :us_tn])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 4, 18), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 4, 3), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 3, 26), [:us])[0] || {})[:name]

    assert_equal "New Year's Day", (Holidays.on(Date.civil(2028, 1, 1), [:us])[0] || {})[:name]

    assert_equal "New Year's Day", (Holidays.on(Date.civil(2027, 12, 31), [:us], [:observed])[0] || {})[:name]

    assert_equal "Martin Luther King, Jr. Day", (Holidays.on(Date.civil(2017, 1, 16), [:us])[0] || {})[:name]
assert_equal "Martin Luther King, Jr. Day", (Holidays.on(Date.civil(2018, 1, 15), [:us])[0] || {})[:name]
assert_equal "Martin Luther King, Jr. Day", (Holidays.on(Date.civil(2019, 1, 21), [:us])[0] || {})[:name]

    assert_equal "Martin Luther King, Jr. Day", (Holidays.on(Date.civil(2025, 1, 20), [:us])[0] || {})[:name]
assert_equal "Martin Luther King, Jr. Day", (Holidays.on(Date.civil(2026, 1, 19), [:us])[0] || {})[:name]
assert_equal "Martin Luther King, Jr. Day", (Holidays.on(Date.civil(2027, 1, 18), [:us])[0] || {})[:name]

    assert_equal "Presidents' Day", (Holidays.on(Date.civil(2025, 2, 17), [:us])[0] || {})[:name]
assert_equal "Presidents' Day", (Holidays.on(Date.civil(2026, 2, 16), [:us])[0] || {})[:name]
assert_equal "Presidents' Day", (Holidays.on(Date.civil(2027, 2, 15), [:us])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 3, 4), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 3, 3), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 3, 2), [:us])[0] || {})[:name]

    assert_equal "Town Meeting Day", (Holidays.on(Date.civil(2025, 3, 4), [:us_vt])[0] || {})[:name]
assert_equal "Town Meeting Day", (Holidays.on(Date.civil(2026, 3, 3), [:us_vt])[0] || {})[:name]
assert_equal "Town Meeting Day", (Holidays.on(Date.civil(2027, 3, 2), [:us_vt])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 3, 26), [:us], [:observed])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 3, 26), [:us], [:observed])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2028, 3, 27), [:us], [:observed])[0] || {})[:name]

    assert_equal "Prince Jonah Kuhio Kalanianaole Day", (Holidays.on(Date.civil(2025, 3, 26), [:us_hi], [:observed])[0] || {})[:name]
assert_equal "Prince Jonah Kuhio Kalanianaole Day", (Holidays.on(Date.civil(2026, 3, 26), [:us_hi], [:observed])[0] || {})[:name]
assert_equal "Prince Jonah Kuhio Kalanianaole Day", (Holidays.on(Date.civil(2028, 3, 27), [:us_hi], [:observed])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2028, 3, 26), [:us])[0] || {})[:name]

    assert_equal "Prince Jonah Kuhio Kalanianaole Day", (Holidays.on(Date.civil(2028, 3, 26), [:us_hi])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 3, 31), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 3, 30), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 3, 29), [:us])[0] || {})[:name]

    assert_equal "Seward's Day", (Holidays.on(Date.civil(2025, 3, 31), [:us_ak])[0] || {})[:name]
assert_equal "Seward's Day", (Holidays.on(Date.civil(2026, 3, 30), [:us_ak])[0] || {})[:name]
assert_equal "Seward's Day", (Holidays.on(Date.civil(2027, 3, 29), [:us_ak])[0] || {})[:name]

    assert_equal "César Chávez Day", (Holidays.on(Date.civil(2025, 3, 31), [:us_ca])[0] || {})[:name]
assert_equal "César Chávez Day", (Holidays.on(Date.civil(2026, 3, 31), [:us_ca])[0] || {})[:name]
assert_equal "César Chávez Day", (Holidays.on(Date.civil(2027, 3, 31), [:us_ca])[0] || {})[:name]

    assert_equal "Emancipation Day", (Holidays.on(Date.civil(2025, 4, 16), [:us_dc], [:observed])[0] || {})[:name]
assert_equal "Emancipation Day", (Holidays.on(Date.civil(2026, 4, 16), [:us_dc], [:observed])[0] || {})[:name]
assert_equal "Emancipation Day", (Holidays.on(Date.civil(2027, 4, 16), [:us_dc], [:observed])[0] || {})[:name]
assert_equal "Emancipation Day", (Holidays.on(Date.civil(2028, 4, 17), [:us_dc], [:observed])[0] || {})[:name]

    assert_equal "Emancipation Day", (Holidays.on(Date.civil(2028, 4, 16), [:us_dc])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 4, 21), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 4, 20), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 4, 19), [:us])[0] || {})[:name]

    assert_equal "Patriots' Day", (Holidays.on(Date.civil(2025, 4, 21), [:us_me, :us_ma])[0] || {})[:name]
assert_equal "Patriots' Day", (Holidays.on(Date.civil(2026, 4, 20), [:us_me, :us_ma])[0] || {})[:name]
assert_equal "Patriots' Day", (Holidays.on(Date.civil(2027, 4, 19), [:us_me, :us_ma])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 4, 28), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 4, 27), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 4, 26), [:us])[0] || {})[:name]

    assert_equal "Confederate Memorial Day", (Holidays.on(Date.civil(2025, 4, 28), [:us_al, :us_ms])[0] || {})[:name]
assert_equal "Confederate Memorial Day", (Holidays.on(Date.civil(2026, 4, 27), [:us_al, :us_ms])[0] || {})[:name]
assert_equal "Confederate Memorial Day", (Holidays.on(Date.civil(2027, 4, 26), [:us_al, :us_ms])[0] || {})[:name]

    assert_equal "Arbor Day", (Holidays.on(Date.civil(2025, 4, 25), [:us_ne])[0] || {})[:name]

    assert_equal "Truman Day", (Holidays.on(Date.civil(2025, 5, 8), [:us_mo])[0] || {})[:name]

    assert_equal "Confederate Memorial Day", (Holidays.on(Date.civil(2025, 5, 10), [:us_sc])[0] || {})[:name]

    assert_equal "Memorial Day", (Holidays.on(Date.civil(2025, 5, 26), [:us])[0] || {})[:name]
assert_equal "Memorial Day", (Holidays.on(Date.civil(2026, 5, 25), [:us])[0] || {})[:name]
assert_equal "Memorial Day", (Holidays.on(Date.civil(2027, 5, 31), [:us])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 6, 2), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 6, 1), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 6, 7), [:us])[0] || {})[:name]

    assert_equal "Jefferson Davis' Birthday", (Holidays.on(Date.civil(2025, 6, 2), [:us_al])[0] || {})[:name]
assert_equal "Jefferson Davis' Birthday", (Holidays.on(Date.civil(2026, 6, 1), [:us_al])[0] || {})[:name]
assert_equal "Jefferson Davis' Birthday", (Holidays.on(Date.civil(2027, 6, 7), [:us_al])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 6, 11), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 6, 11), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 6, 11), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2028, 6, 11), [:us])[0] || {})[:name]

    assert_equal "King Kamehameha I Day", (Holidays.on(Date.civil(2028, 6, 11), [:us_hi])[0] || {})[:name]

    assert_equal "King Kamehameha I Day", (Holidays.on(Date.civil(2025, 6, 11), [:us_hi], [:observed])[0] || {})[:name]
assert_equal "King Kamehameha I Day", (Holidays.on(Date.civil(2026, 6, 11), [:us_hi], [:observed])[0] || {})[:name]
assert_equal "King Kamehameha I Day", (Holidays.on(Date.civil(2027, 6, 11), [:us_hi], [:observed])[0] || {})[:name]
assert_equal "King Kamehameha I Day", (Holidays.on(Date.civil(2028, 6, 12), [:us_hi], [:observed])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 6, 20), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 6, 20), [:us])[0] || {})[:name]

    assert_equal "West Virginia Day", (Holidays.on(Date.civil(2025, 6, 20), [:us_wv], [:observed])[0] || {})[:name]
assert_equal "West Virginia Day", (Holidays.on(Date.civil(2027, 6, 21), [:us_wv], [:observed])[0] || {})[:name]

    assert_equal "West Virginia Day", (Holidays.on(Date.civil(2026, 6, 20), [:us_wv])[0] || {})[:name]

    assert_equal "Independence Day", (Holidays.on(Date.civil(2025, 7, 4), [:us], [:observed])[0] || {})[:name]
assert_equal "Independence Day", (Holidays.on(Date.civil(2026, 7, 3), [:us], [:observed])[0] || {})[:name]
assert_equal "Independence Day", (Holidays.on(Date.civil(2027, 7, 5), [:us], [:observed])[0] || {})[:name]

    assert_equal "Pioneer Day", (Holidays.on(Date.civil(2025, 7, 24), [:us_ut])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 8, 11), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 8, 10), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 8, 9), [:us])[0] || {})[:name]

    assert_equal "Victory Day", (Holidays.on(Date.civil(2025, 8, 11), [:us_ri])[0] || {})[:name]
assert_equal "Victory Day", (Holidays.on(Date.civil(2026, 8, 10), [:us_ri])[0] || {})[:name]
assert_equal "Victory Day", (Holidays.on(Date.civil(2027, 8, 9), [:us_ri])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 8, 15), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 8, 17), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 8, 16), [:us])[0] || {})[:name]

    assert_equal "Bennington Battle Day", (Holidays.on(Date.civil(2025, 8, 15), [:us_vt], [:observed])[0] || {})[:name]
assert_equal "Bennington Battle Day", (Holidays.on(Date.civil(2026, 8, 17), [:us_vt], [:observed])[0] || {})[:name]
assert_equal "Bennington Battle Day", (Holidays.on(Date.civil(2027, 8, 16), [:us_vt], [:observed])[0] || {})[:name]

    assert_equal "Bennington Battle Day", (Holidays.on(Date.civil(2025, 8, 16), [:us_vt])[0] || {})[:name]
assert_equal "Bennington Battle Day", (Holidays.on(Date.civil(2026, 8, 16), [:us_vt])[0] || {})[:name]
assert_equal "Bennington Battle Day", (Holidays.on(Date.civil(2027, 8, 16), [:us_vt])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 8, 15), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 8, 21), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 8, 20), [:us])[0] || {})[:name]

    assert_equal "Statehood Day", (Holidays.on(Date.civil(2025, 8, 15), [:us_hi])[0] || {})[:name]
assert_equal "Statehood Day", (Holidays.on(Date.civil(2026, 8, 21), [:us_hi])[0] || {})[:name]
assert_equal "Statehood Day", (Holidays.on(Date.civil(2027, 8, 20), [:us_hi])[0] || {})[:name]

    assert_equal "Labor Day", (Holidays.on(Date.civil(2025, 9, 1), [:us])[0] || {})[:name]
assert_equal "Labor Day", (Holidays.on(Date.civil(2026, 9, 7), [:us])[0] || {})[:name]
assert_equal "Labor Day", (Holidays.on(Date.civil(2027, 9, 6), [:us])[0] || {})[:name]

    assert_equal "Indigenous Peoples Day", (Holidays.on(Date.civil(2025, 10, 13), [:us])[0] || {})[:name]
assert_equal "Indigenous Peoples Day", (Holidays.on(Date.civil(2026, 10, 12), [:us])[0] || {})[:name]
assert_equal "Indigenous Peoples Day", (Holidays.on(Date.civil(2027, 10, 11), [:us])[0] || {})[:name]

    assert_equal "Alaska Day", (Holidays.on(Date.civil(2025, 10, 18), [:us_ak])[0] || {})[:name]

    assert_equal "Alaska Day", (Holidays.on(Date.civil(2025, 10, 17), [:us_ak], [:observed])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 10, 31), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 10, 30), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 10, 29), [:us])[0] || {})[:name]

    assert_equal "Nevada Day", (Holidays.on(Date.civil(2025, 10, 31), [:us_nv])[0] || {})[:name]
assert_equal "Nevada Day", (Holidays.on(Date.civil(2026, 10, 30), [:us_nv])[0] || {})[:name]
assert_equal "Nevada Day", (Holidays.on(Date.civil(2027, 10, 29), [:us_nv])[0] || {})[:name]

    assert_equal "Veterans Day", (Holidays.on(Date.civil(2025, 11, 11), [:us], [:observed])[0] || {})[:name]
assert_equal "Veterans Day", (Holidays.on(Date.civil(2026, 11, 11), [:us], [:observed])[0] || {})[:name]
assert_equal "Veterans Day", (Holidays.on(Date.civil(2027, 11, 11), [:us], [:observed])[0] || {})[:name]
assert_equal "Veterans Day", (Holidays.on(Date.civil(2028, 11, 10), [:us], [:observed])[0] || {})[:name]

    assert_equal "Veterans Day", (Holidays.on(Date.civil(2028, 11, 11), [:us])[0] || {})[:name]

    assert_equal "Thanksgiving", (Holidays.on(Date.civil(2025, 11, 27), [:us])[0] || {})[:name]
assert_equal "Thanksgiving", (Holidays.on(Date.civil(2026, 11, 26), [:us])[0] || {})[:name]
assert_equal "Thanksgiving", (Holidays.on(Date.civil(2027, 11, 25), [:us])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 11, 28), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2026, 11, 27), [:us])[0] || {})[:name]
assert_nil (Holidays.on(Date.civil(2027, 11, 26), [:us])[0] || {})[:name]

    assert_equal "Day after Thanksgiving (Black Friday)", (Holidays.on(Date.civil(2025, 11, 28), [:us_ca, :us_de, :us_fl, :us_ga, :us_ia, :us_il, :us_ks, :us_ky, :us_me, :us_mi, :us_mn, :us_ms, :us_ne, :us_nh, :us_nc, :us_ok, :us_or, :us_pa, :us_sc, :us_tn, :us_tx, :us_va, :us_wa, :us_wv])[0] || {})[:name]
assert_equal "Day after Thanksgiving (Black Friday)", (Holidays.on(Date.civil(2026, 11, 27), [:us_ca, :us_de, :us_fl, :us_ga, :us_ia, :us_il, :us_ks, :us_ky, :us_me, :us_mi, :us_mn, :us_ms, :us_ne, :us_nh, :us_nc, :us_ok, :us_or, :us_pa, :us_sc, :us_tn, :us_tx, :us_va, :us_wa, :us_wv])[0] || {})[:name]
assert_equal "Day after Thanksgiving (Black Friday)", (Holidays.on(Date.civil(2027, 11, 26), [:us_ca, :us_de, :us_fl, :us_ga, :us_ia, :us_il, :us_ks, :us_ky, :us_me, :us_mi, :us_mn, :us_ms, :us_ne, :us_nh, :us_nc, :us_ok, :us_or, :us_pa, :us_sc, :us_tn, :us_tx, :us_va, :us_wa, :us_wv])[0] || {})[:name]

    assert_equal "Christmas Eve Day", (Holidays.on(Date.civil(2025, 12, 24), [:us_ar, :us_mi, :us_nc, :us_sc, :us_tx, :us_wi])[0] || {})[:name]
assert_equal "Christmas Eve Day", (Holidays.on(Date.civil(2026, 12, 24), [:us_ar, :us_mi, :us_nc, :us_sc, :us_tx, :us_wi])[0] || {})[:name]

    assert_equal "Christmas Day", (Holidays.on(Date.civil(2025, 12, 25), [:us], [:observed])[0] || {})[:name]
assert_equal "Christmas Day", (Holidays.on(Date.civil(2026, 12, 25), [:us], [:observed])[0] || {})[:name]
assert_equal "Christmas Day", (Holidays.on(Date.civil(2027, 12, 24), [:us], [:observed])[0] || {})[:name]

    assert_equal "Christmas Day", (Holidays.on(Date.civil(2027, 12, 25), [:us])[0] || {})[:name]

    assert_nil (Holidays.on(Date.civil(2025, 12, 26), [:us])[0] || {})[:name]

    assert_equal "Day after Christmas", (Holidays.on(Date.civil(2025, 12, 26), [:us_nc, :us_sc, :us_tx])[0] || {})[:name]

    assert_equal "New Year's Eve", (Holidays.on(Date.civil(2025, 12, 31), [:us_mi, :us_wi])[0] || {})[:name]

    assert_equal "Groundhog Day", (Holidays.on(Date.civil(2013, 2, 2), [:us], [:informal])[0] || {})[:name]

    assert_equal "Valentine's Day", (Holidays.on(Date.civil(2013, 2, 14), [:us], [:informal])[0] || {})[:name]

    assert_equal "St. Patrick's Day", (Holidays.on(Date.civil(2013, 3, 17), [:us], [:informal])[0] || {})[:name]

    assert_equal "April Fool's Day", (Holidays.on(Date.civil(2013, 4, 1), [:us], [:informal])[0] || {})[:name]

    assert_equal "Earth Day", (Holidays.on(Date.civil(2013, 4, 22), [:us], [:informal])[0] || {})[:name]

    assert_equal "Mother's Day", (Holidays.on(Date.civil(2013, 5, 12), [:us], [:informal])[0] || {})[:name]

    assert_equal "Armed Forces Day", (Holidays.on(Date.civil(2013, 5, 18), [:us], [:informal])[0] || {})[:name]

    assert_equal "Father's Day", (Holidays.on(Date.civil(2013, 6, 16), [:us], [:informal])[0] || {})[:name]

    assert_equal "Halloween", (Holidays.on(Date.civil(2013, 10, 31), [:us], [:informal])[0] || {})[:name]

  end
end
