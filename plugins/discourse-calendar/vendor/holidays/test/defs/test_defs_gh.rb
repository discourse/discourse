# encoding: utf-8
require File.expand_path(File.dirname(__FILE__)) + '/../test_helper'

# This file is generated by the Ruby Holiday gem.
#
# Definitions loaded: definitions/gh.yaml
class GhDefinitionTests < Test::Unit::TestCase  # :nodoc:

  def test_gh
    assert_equal "Good Friday", (Holidays.on(Date.civil(2022, 4, 15), [:gh])[0] || {})[:name]

    assert_equal "Easter Monday", (Holidays.on(Date.civil(2022, 4, 18), [:gh])[0] || {})[:name]

    assert_equal "New Year's Day", (Holidays.on(Date.civil(2022, 1, 3), [:gh], [:observed])[0] || {})[:name]

    assert_equal "Constitution Day", (Holidays.on(Date.civil(2022, 1, 7), [:gh])[0] || {})[:name]

    assert_equal "Independence Day", (Holidays.on(Date.civil(2022, 3, 7), [:gh], [:observed])[0] || {})[:name]

    assert_equal "Eid-ul-Fitr (Day 1)", (Holidays.on(Date.civil(2025, 3, 31), [:gh], [:observed])[0] || {})[:name]

    assert_equal "Eid-ul-Fitr", (Holidays.on(Date.civil(2023, 4, 24), [:gh], [:observed])[0] || {})[:name]
assert_equal "Eid-ul-Fitr", (Holidays.on(Date.civil(2024, 4, 11), [:gh], [:observed])[0] || {})[:name]

    assert_equal "Eid-ul-Fitr (Day 2)", (Holidays.on(Date.civil(2025, 4, 1), [:gh], [:observed])[0] || {})[:name]

    assert_equal "May Day (Workers' Day)", (Holidays.on(Date.civil(2022, 5, 1), [:gh])[0] || {})[:name]

    assert_equal "African Union Day", (Holidays.on(Date.civil(2022, 5, 25), [:gh], [:informal])[0] || {})[:name]

    assert_equal "Eid-ul-Adha", (Holidays.on(Date.civil(2023, 6, 28), [:gh], [:observed])[0] || {})[:name]
assert_equal "Eid-ul-Adha", (Holidays.on(Date.civil(2024, 6, 17), [:gh], [:observed])[0] || {})[:name]
assert_equal "Eid-ul-Adha", (Holidays.on(Date.civil(2025, 6, 6), [:gh], [:observed])[0] || {})[:name]

    assert_equal "Republic Day", (Holidays.on(Date.civil(2022, 7, 1), [:gh], [:informal])[0] || {})[:name]

    assert_equal "Founders' Day", (Holidays.on(Date.civil(2022, 8, 4), [:gh])[0] || {})[:name]

    assert_equal "Kwame Nkrumah Memorial Day", (Holidays.on(Date.civil(2022, 9, 21), [:gh])[0] || {})[:name]

    assert_equal "Farmer's Day", (Holidays.on(Date.civil(2022, 12, 2), [:gh])[0] || {})[:name]

    assert_equal "Christmas Day", (Holidays.on(Date.civil(2022, 12, 25), [:gh])[0] || {})[:name]

    assert_equal "Boxing Day", (Holidays.on(Date.civil(2022, 12, 26), [:gh])[0] || {})[:name]

  end
end
