en:
  site_settings:
    openid_connect_enabled: Enable OpenID Connect authentication. Customize user interface text <a href='%{base_path}/admin/customize/site_texts?q=js.login.oidc'>here</a>
    openid_connect_discovery_document: "OpenID Connect discovery document URL. Normally located at 'https://your.domain/.well-known/openid-configuration'"
    openid_connect_client_id: "OpenID Connect client ID"
    openid_connect_client_secret: "OpenID Connect client secret"
    openid_connect_authorize_scope: "The scopes sent to the authorize endpoint. This must include 'openid'."
    openid_connect_rp_initiated_logout: "Redirect the user to end_session_endpoint after logout. Must be supported by your identity provider and included in the discovery document."
    openid_connect_rp_initiated_logout_redirect: "(optional) The post_logout_redirect_uri which will be passed to the logout endpoint. If provided, it must be registered with the identity provider."
    openid_connect_token_scope: "The scopes sent when requesting the token endpoint. The official specification does not require this."
    openid_connect_error_redirects: "If the callback error_reason contains the first parameter, the user will be redirected to the URL in the second parameter"
    openid_connect_allow_association_change: "Allow users to disconnect and reconnect their Discourse accounts from the OpenID Connect provider"
    openid_connect_verbose_logging: "Log detailed openid-connect authentication information to `/logs`. Keep this disabled during normal use."
    openid_connect_authorize_parameters: "URL parameters which will be included in the redirect from /auth/oidc to the IDP's authorize endpoint"
    openid_connect_overrides_email: "On every login, override the user's email using the openid-connect value. Works the same as the `auth_overrides_email` setting, but is specific to OpenID Connect logins."
    openid_connect_claims: "Explicitly define the claims for use with providers that don't pass data back based on scopes. (JSON)"
    openid_connect_match_by_email: "Use email address to match OpenID Connect authentications to existing Discourse user accounts."
    openid_connect_match_by_username: "Use username to match OpenID Connect authentications to existing Discourse user accounts. username_change_period must be 0."
    openid_connect_use_pkce: "Enable Proof Key for Code Exchange (PKCE) for OpenID Connect authentication."
    openid_connect_groups_enabled: "Enable group membership from mapping of OpenID Connect group membership."
    openid_connect_groups_maps: "Mappings of OpenID Connect group names to comma-separated list of discourse group names, e.g. '/keycloak-developers:discourse_devgroup_members,discourse_usergroup_moderators' will add a user in keycloak group '/keycloak-developers' to both groups 'discourse_devgroup_members' and 'discourse_usergroup_moderators'.  Discourse groups can appear more than once."
    openid_connect_groups_remove_unmapped_groups: "If user is not in any OpenID Connect group that maps to a discourse group, remove existing membership from that discourse group.  Only groups set in openid_connect_groups_maps will be removed."
  login:
    omniauth_error:
      openid_connect_discovery_error: Unable to fetch configuration from identity provider. Please try again.
