# WARNING: Never edit this file.
# It will be overwritten when translations are pulled from Crowdin.
#
# To work with us on translations, join this project:
# https://translate.discourse.org/

zh_CN:
  site_settings:
    discourse_automation_enabled: "启用 discourse-automation 插件"
  discourse_automation:
    models:
      automations:
        validations:
          script_blank: "脚本不能为空"
          trigger_blank: "触发器不能为空"
          script_missing_required_fields: "脚本缺少必填字段：%{fields}"
          trigger_missing_required_fields: "触发器缺少必填字段：%{fields}"
      fields:
        required_field: 必须在 `%{target}:%{target_name}` 上填写字段 `%{name}`。
        invalid_field: 字段的组件 `%{component}` 在 `%{target}:%{target_name}` 上不可用。
        invalid_metadata: '`%{field}` 的数据无效或组件 `%{component}` 未知。'
    triggerables:
      errors:
        custom_fields_or_user_profile_required: "必须提供至少一个 'custom_fields' 或 'user_profile'。"
      user_badge_granted:
        title: 授予用户徽章
        doc: 当用户被授予徽章时触发自动化。
      user_first_logged_in:
        title: 用户首次登录
        doc: 当用户首次登录时触发自动化。
      stalled_topic:
        title: 停滞的话题
        doc: 当话题在指定时间段内未收到话题所有者的新回复时触发自动化。建议将此触发器的范围限定为标签/类别，因为受影响的话题数量可能会非常多。作为一项安全措施，受影响话题的数量上限为 250 个。
      api_call:
        title: API 调用
        description: 发出 POST 请求来触发自动化
        doc: 应使用全局 API 密钥将 POST 请求发送到 `/automations/:id/trigger.json`。
      category_created_edited:
        title: 创建/编辑类别
        description: 创建或编辑类别时，将触发自动化
      recurring:
        title: 重复
      point_in_time:
        title: 时间点
        description: 当达到某个日期时，将触发自动化
      user_added_to_group:
        title: 用户被添加到群组
        description: 当用户被添加到指定群组时，将触发自动化
      user_removed_from_group:
        title: 用户被从群组中移除
        description: 当用户被从指定群组中移除时，将触发自动化
      user_promoted:
        title: 用户信任级别被提升
        description: 当用户被从一个信任级别提升到另一个信任级别时
        transition_placeholder: "从 %{from_level_name} 到 %{to_level_name}"
      stalled_wiki:
        title: 停滞的 Wiki
        description: 当 Wiki 未被编辑的时间超过定义的时间时，将触发自动化
      post_created_edited:
        title: 帖子被创建/编辑
        description: 当有效的帖子被编辑或创建时，将触发自动化
      pm_created:
        title: 个人消息被创建
        description: 当有效的个人消息被创建时，将触发自动化
      topic_tags_changed:
        title: 话题标签已更改
        description: 当话题的标签发生变化时，将触发自动化
      topic:
        title: 话题
        description: 关联的脚本将仅用于指定的话题，这对于执行验证的脚本十分有用
      after_post_cook:
        title: 处理帖子后
        description: 当帖子内容被处理时，将触发自动化
      user_updated:
        title: 用户更新后
        description: 当用户更新任何信息时，将触发自动操作
    scriptables:
      post:
        title: 创建帖子
        description: 在指定话题上创建帖子
      topic:
        title: 创建话题
        description: 以特定用户身份创建话题
      flag_post_on_words:
        title: 基于字词举报帖子
        description: 如果帖子包含指定字词，则举报它
        flag_message: "帖子包含不允许的字词：%{words}"
        doc: 同时包含所有给定字词的帖子将被举报和隐藏。请注意，定义由逗号分隔的多个字词将被用作复合词（每个字词都必须存在）。
      zapier_webhook:
        title: Zapier 网络钩子
        description: 以触发器的上下文为正文调用 zap
      auto_responder:
        title: 自动回复器
        description: 对包含指定关键字的帖子发布回复
      auto_tag_topic:
        title: 自动为话题添加标签
        description: 自动为话题添加标签
      pin_topic:
        title: 置顶话题
        description: 在给定日期置顶指定话题
      banner_topic:
        title: 将横幅设置为话题
        description: 将话题设置成横幅
      gift_exchange:
        title: 礼物交换
        description: 允许以匿名方式配对群组中的用户以互相发送礼物。
        doc: 礼物交换需要一个至少包含 3 个用户的现有群组。在选定日期，该群组的每个用户都将与一名赠送者和一名受赠者配对。
      send_pms:
        title: 发送 PM
        description: 允许发送 PM（可能存在延迟）。
        doc: 允许向用户发送多条 PM。每条 PM 都接受延迟。
      suspend_user_by_email:
        title: 通过电子邮件暂停用户
        description: 根据电子邮件地址自动暂停帐户
      user_global_notice:
        title: 用户全局通知
        description: 允许为用户显示全局通知
      user_group_membership_through_badge:
        title: 通过徽章修改用户群组成员资格
        description: 根据徽章修改用户群组成员资格
      suspend_user_by_email_with_api_call:
        doc: 使用 API 调用触发 `suspend_user_by_email` 时，端点期望发送的参数中存在有效的 `email`。`reasons` 和 `suspend_until (ISO 8601 format)` 也可以用于替换默认字段值。
      user_global_notice_with_stalled_topic:
        doc: 通过停滞的话题触发时，话题所有者将收到全局通知。
      user_global_notice_with_first_accepted_solution:
        doc: 通过第一个接受的解决方案触发时，解决方案作者将收到全局通知。
      send_pms_with_api_call:
        doc: 将 `send pms` 脚本与 `api call` 触发器结合使用时，您的请求的 `usernames` 参数将用于填充接收者列表。
      topic_required_words:
        title: 话题必选字词
        description: 允许定义话题必选字词列表，每个帖子中至少应使用一个字词。
        doc: 话题必选字词需要一个话题。编辑/创建帖子时，将根据字词列表验证帖子，至少必须存在一个字词。
        errors:
          must_include_word: "帖子必须至少包含以下字词之一：%{words}"
      close_topic:
        title: 关闭话题
        description: 使用可选的关闭消息关闭话题
      append_last_edited_by:
        title: 追加最后编辑者
        description: 将帖子的 'last edited by' 详细信息添加到已处理内容的底部。
        text: "最后由 @%{username} 在 %{date_time} 编辑"
      append_last_checked_by:
        title: 追加最后检查者
        description: 将帖子的 'last checked by' 详细信息添加到已处理内容的底部。
        text: "最后由 @%{username} 在 %{date_time} 检查"
        summary: 检查文档
        details: "对文档执行检查："
        button_text: 完成
      add_user_to_group_through_custom_field:
        title: "通过用户自定义字段将用户添加到群组"
        description: "当用户登录或进行定期检查时自动将其添加到群组"
      group_category_notification_default:
        title: "群组类别通知默认值"
        description: "为群组成员设置类别的默认通知级别"
      send_chat_message:
        title: "发送聊天消息"
        description: "向频道发送自定义聊天消息"
      random_assign:
        title: "随机指定"
        description: "向群组随机指定话题"
